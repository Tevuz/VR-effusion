float DDA(float3 pos, float3 dir) {return 0.0};

void Raytrace( int x : column ) {
    float3 pos, dir, nor;
            ...
    while ( true ) {
        pos += dir * DDA(pos, dir);
            ...
        float reflectance = rSchlick2(nor, dir, ...);
        dir = reflectOrRefract(reflectance, dir, nor, ...);
            ...
        float signal = max(0.0, dot(-incident, reflected));
        output[pos] += signal * attenuation;
    }
}

void Fill( int x ) {
    int y[2];
    int i = 0;

    while (y[i & 1] < HEIGHT) {
        if (i == 0) {
            if (isFilled(x, y[0])) {
                i = 1;
            } else {
                y[0]++;
                y[1]++;
            }
        } else if (i == 1) {
            if (isBack(x, y[1]) {
                i = 2;
            } else {
                y[1]++;
            }
        } else {
            if (y[0] < y[1]) {
                fill(x, y[0]);
                y[0]++;
            } else {
                i = 0;
            }
        }
    }

    while (y[i & 1] < HEIGHT) {
        if (i == 0) {
            if (isFilled(x, y[0])) {
                i = 1;
            } else {
                y[0]++;
                y[1]++;
            }
        } else if (i == 1) {
            if (isBack(x, y[1]) {
                i = 2;
            } else {
                y[1]++;
            }
        } else {
            if (y[0] < y[1]) {
                fill(x, y[0]);
                y[0]++;
            } else {
                i = 0;
            }
        }
    }

}